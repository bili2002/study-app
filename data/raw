АНОТАЦИИ НА ВЪПРОСИТЕ
1. Множества. Декартово произведение. Релации. Функции.
Аксиоматизация на множествата – аксиоми за обема, отделянето, степенното
множество и индуктивно генерираните множества. Математическа индукция. Основни
операции върху множества и техните свойства. Наредена двойка и наредена n-орка.
Декартово произведение и обобщено Декартово произведение на множества. Релация
над n домейна. Свойства на бинарните релации. Релации на еквивалентост и класове на
еквивалентност. Релации на частична наредба. Диаграми на Хассе. Релации на пълна
наредба. Минимален и максимален елемент в релация на частична наредба. Влагане на
частична наредба в пълна наредба – топологично сортиране. Частични и тотални
функции. Инекции, биекции и сюрекции. Дефиниция на крайно множество и на
кардиналност на крайно множество. Дефиниция на изброимо безкрайно множество.
Принцип на Дирихле.

2. Основни комбинаторни принципи и конфигурации. Рекурентни уравнения.
Формулировки на принципите на изброителната комбинаторика – принцип на Дирихле,
принцип на биекцията, принцип на събирането, принцип на изваждането, принцип на
умножението, принцип на делението, принцип за включване и изключване (с
доказателство). Основните комбинаторни конфигурации: с или без наредба, с или без
повтаряне. Извеждане на формулите за броя на основните комбинаторни
конфигурации. Биномни коефициенти и теорема на Нютон. Доказателства на
комбинаторни тъждества чрез комбинаторни разсъждения (принцип на двукратното
броене). Алгоритъм за решаване на линейни рекурентни уравнения с константни
коефициенти – хомогенни и нехомогенни.

3. Графи. Дървета. Обхождания на графи.
Дефиниции за краен ориентиран (мулти)граф и краен неориентиран (мулти)граф.
Дефиниции за път (цикъл) в ориентиран и неориентиран мултиграф. Свързаност и
свързани компоненти на граф. Дефиниция на дърво и кореново дърво. Доказателство,
че всяко кореново дърво е дърво и |V|=|E|+1. Покриващо дърво на граф. Обхождане на
граф в ширина и дълбочина. Ойлерови обхождания на мултиграф. Теореми за
съществуване на Ойлеров цикъл (с доказателство) и Ойлеров път.

4. Kрайни автомати. Регулярни езици.
Детерминирани крайни автомати. Недетерминирани крайни автомати. Представяне на
всеки недетерминиран краен автомат с детерминиран (с доказателство). Регулярни
операции. Доказателство за затвореност на автоматните езици относно регулярните
операции. Регулярни езици. Формулировка и доказателство на теоремата на Клини.
Формулировка и доказателство на лемата разрастване за регулярни езици (uvw-лема).
Примери за нерегулярни езици. Формулировка и доказателство на теоремата на Майхил
-Нероуд. Алгоритъм за конструиране на минимален краен детерминиран тотален
автомат, еквивалентен на даден детерминиран краен автомат.

5. Контекстносвободни граматики и езици. Стекови автомати.
Контекстносвободнa граматикa, дърво на синтактичен анализ, контекстносвободен
език. Доказателство на теоремите за затвореност на контекстносвободните езици.
Недетерминиран стеков автомат. Изпълнение в недетерминиран стеков автомат. Език,
разпознаван от недетерминиран стеков автомат. Доказателство на теорема за свеждане
на контекстносвободна граматика към еквивалентен недетерминиран стеков автомат.
Формулировка и доказателство на лемата за разрастване за контекстносвободни езици.
Примери с доказателства за езици, които не са контекстносвободни. Доказателство за
незатвореността на контекстносвободните езици относно допълнение и сечение.

6. Сложност на алгоритъм. Асимптотично поведение на целочислени функции. Сложност на рекурсивни програми.
Модели на изчисленията – машина на Тюринг, машина с произволен достъп и език за
програмиране. Дефиниции на (машинно-зависима) сложност (по време и памет) в най-
лошия и средния случай. Поведение на асимптотически положителни целочислени
функции O / омега функции. Свойства и гранични теореми (без
доказателство). Формулировка на теоремата за решенията на рекурентни отношения от
вида T(1)=(1), T(n)=a.T(n/b) + f(n), n>1.

7. Алгоритми в графи с тегла на ребрата. Оценки за сложност.
Дефиниция на минимално покриващо дърво (МПД) на свързан граф с тегла на ребрата.
Формулировка и доказателство на теоремата за съгласуваното множество (условия за
нарастване на подмножество на МПД). Алгоритми на Прим и Крускал, имплементации
и оценка на сложността. Задачи за най-къс път в граф с тегла на ребрата. Дърво на най-
късите пътища. Алгоритъм за намиране на дърво на най-къси пътища в граф с
константни тегла по ребрата и алгоритъм на Дейкстра. Оценка на сложността.
Алгоритъм на Флойд за намиране на всички двойки най-кратки пътища.

8. Динамично програмиране. Оценки за сложност.
Същност на алгоритмичната схема „динамично програмиране” – свеждане на задача
със зададен размер към задачи от същия вид с по-малки размери и „мемоизация”.
Принцип за оптималност и конструиране на решението на задачата от решенията на
подзадачите. Задачи с линейна таблица на подзадачите (най-дълга растяща подредица).
Задачи с триъгълна таблица на подзадачите (оптимално разбиване на редица). Задачи с
правоъгълна таблица на подзадачите (най-дълга обща подредица на две редици, задача
за раницата).

9. Компютърни архитектури – Формати на данните. Вътрешна структура на
централен процесор – блокове и конвейерна обработка, инструкции.
Oбща структура на компютрите и концептуално изпълнение на инструкциите,
запомнена програма. Формати на даннитe – цели двоични числа, двоично-десетични
числа, двоични числа с плаваща запетая, знакови данни и кодови таблици. Централен
процесор – регистри, АЛУ, регистри на състоянията и флаговете, блокове за
управление, връзка с паметта, дешифрация на инструкциите, преходи.

10. Структура и йерархия на паметта. Сегментна и странична преадресация.
Система за прекъсване – приоритети и обслужване.
Структура на основната памет. Йерархия – кеш, основна и виртуална памет. Сегметна и
странична преадресация – селектор, дескриптор, таблици и регистри при сегметна
преадресация; каталог на страниците, описател, стратегии на подмяна на страниците
при странична преадресация. Система за прекъсване – видове прекъсвания, структура и
обработка, конкурентност и приоритети, контролери на прекъсванията.

11. Файлова система. Логическа организация и физическо представяне.
Логическа организация на файлова система (ФС). Имена на файлове. Типове файлове -
обикновен файл, специален файл, каталог, символна връзка, програмен канал.
Вътрешна структура на файл. Атрибути на файл. Йерархична организация на ФС -
абсолютно и относително пълно име на файл, текущ каталог. Физическа организация на
ФС. Стратегии за управление на дисковото пространство. Системни структури,
съдържащи информация за разпределението на дисковата памет и съхранявани
постоянно на диска: за свободните блокове; за блоковете, разпределени за всеки един
файл; за общи параметри на ФС. Примери за физическа организация на ФС: UNIX
System V; LINUX; MS DOS; NTFS.

12. Управление на процеси и междупроцесни комуникации.
Основни системни примитиви за управление на процеси. Създаване на процес.
Изпълнение на програма. Завършване на процес. Синхронизация със завършването на
процеса-син. Права на процеси – потребителски идентификатори на процес. Групи
процеси и сесия. Механизми за междупроцесни комуникации. Сигнали. Програмни
канали. IPC пакет на UNIX System V: Обща памет. Семафори. Съобщения.
Примерни задачи: задачи, съответни на съдържанието на въпроса.

13. Компютърни мрежи и протоколи – OSI модел. Маршрутизация. Протоколи
IPv4, IPv6, TCP, DNS.
OSI модел – най-обща характеристика на нивата, съпоставяне с модела TCP/IP.
Разпределена маршрутизация – алгоритми с дистантен вектор и следене на състоянието
на линията. IPv4 адресация – класова и безкласова. Основни характеристики на
протокол IPv6. TCP – процедура на трикратно договаряне. Основни характеристики на
протоколи DNS (резолвинг на имената по IPv4 и IPv6).

14. Процедурно програмиране – основни конструкции
Принципи на структурното програмиране.
Управление на изчислителния процес. Основни управляващи конструкции –
условни оператори, оператори за цикъл.
Променливи – видове: локални променливи, глобални променливи;
инициализация на променлива; оператор за присвояване.
Функции и процедури. Параметри – видове параметри. Предаване на параметри
– по име и по стойност. Типове и проверка за съответствие на тип
Символни низове. Представяне в паметта. Основни операции със символни
низове.

15. Процедурно програмиране – указатели, масиви и рекурсия.
Изложението по въпроса трябва да включва следните по-съществени елементи:
Указатели и указателна аритметика.
Едномерни и многомерни масиви. Основни операции с масиви – индексиране.
Сортиране и търсене в едномерен масив – основни алгоритми.
Рекурсия – пряка и косвена рекурсия, линейна и разклонена рекурсия.

16. Обектно-ориентирано програмиране. Основни принципи. Класове и обекти.
Наследяване и капсулация.
Абстракция със структури от данни. Класове и обекти. Декларация на клас и
декларация на обект. Основни видове конструктори. Управление на
динамичната памет и ресурсите (“RAII”). Методи – декларация, предаване на
параметри, връщане на резултат.
Наследяване. Производни и вложени класове. Достъп до наследените
компоненти. Капсулация и скриване на информацията. Статични полета и
методи.

17. Обектно-ориентирано програмиране. Подтипов и параметричен
полиморфизъм. Множествено наследяване.
Виртуални функции и подтипов полиморфизъм. Динамично свързване.
Абстрактни методи и класове. Масиви от обекти и от указатели към обекти.
Параметричен полиморфизъм. Шаблони на функция и на клас
Множествено наследяване.

18. Структури от данни. Стек, опашка, списък, дърво. Основни операции върху
тях. Реализация
Структури от данни – дефиниране на понятието.
Списък. Логическо описание. Списък с една и две връзки. Характеристики на
реализациите с една и две връзки. Сложност на операциите по добавяне,
премахване и намиране на елемент. Дефиниране на клас за списък, използващ
една от реализациите.
Стек. Логическо описание. Характеристики на статичната, динамичната и
свързаната реализация. Сложност на операциите по добавяне и премахване на
елемент. Дефиниране на клас за стек, използващ една от реализациите.
Опашка. Логическо описание. Характеристики на статичната, динамичната и
свързаната реализация. Сложност на операциите по добавяне и премахване на
елемент. Дефиниране на клас за опашка, използващ една от реализациите.
Дървовидни структури от данни – кореново дърво и двоично кореново дърво.
Логическо описание. Начини за представяне в паметта. Дефиниране на клас,
реализиращ кореново дърво или двоично кореново дърво.
Двоично кореново дърво за търсене. Логическо описание. Начини за
представяне в паметта. Сложност на операциите по добавяне, премахване и
търсене на елемент. Дефиниране на клас реализиращ двоично кореново дърво за
търсене.

19. Функционално програмиране. Обща характеристика на функционалния стил
на програмиране. Дефиниране и използване на функции. Модели на оценяване.
Функции от по-висок ред.
Характерни особености на функционалния стил на програмиране. Основни
компоненти на функционалните програми. Примитивни изрази. Средства за
комбиниране и абстракция. Оценяване на израз. Дефиниране на функция и
оценяване на приложение на функция. Модели на оценяване. Апликативно
(стриктно, call-by-value) и нормално (лениво, call-by-name) оценяване.
Функции от по-висок ред. Функциите като параметри и оценки на обръщения
към функции. Анонимни (ламбда) функции.
Забележка: По този въпрос е възможно да бъдат дадени задачи за практическата част
на изпита.

20. Функционално програмиране. Списъци. Потоци и отложено оценяване.
Списъци. Представяне. Основни операции със списъци. Функции от по-висок
ред за работа със списъци.
Безкрайни потоци и безкрайни списъци. Основни операции и функции от по-
висок ред. Отложено оценяване. Работа с безкрайни потоци.
Забележка: По този въпрос е възможно да бъдат дадени задачи за практическата част
на изпита.

21. Синтаксис и семантика на термовете и формулите на предикатното смятане
от първи ред. Унификация.
Дефинират се синтактичните понятия терм и формула от даден език на
предикатното смятане. Дефинират се понятията унификатор и най-общ унификатор за
множество от термове. Формулира се алгоритъм за намиране на най-общ унификатор за
крайно множество от термове.
Дава се семантика на термовете и формулите в дадена структура за езика. Доказва се, че
множество от затворени универсални формули има модел точно тогава, когато
множеството от частните му случаи е булево изпълнимо.

22. Mетод на резолюцията в съждителното и в предикатното смятане от първи
ред. Хорнови клаузи.
Дефинира се понятието съждителен резолютивен извод и се доказва теоремата за
коректност и пълнота на резолютивната изводимост. Описва се метода на резолюцията.
Дефинира се понятието хорнов дизюнкт и се доказва, че изпълнимите множества от
хорнови дизюнкти имат най-малък модел.
Примерни типове задачи, свързани с въпроси 21 и 22:
Практически задачи – за дефиниране на предикат с помощта на Пролог; за
проследяване на изпълнението на програма на Пролог.
Теоретични задачи – за определимост и неопределимост на свойства в дадена
структура; показване на изпълнимост на множество от предикатни формули чрез
посочване на структура; доказване на неизпълнимост на множество от предикатни
формули с помощта на метода на резолюцията.

23. Бази от данни. Релационен модел на данните.
Релационен модел на данните: домейн; релация; кортежи; атрибути; схема на релация;
схема на релационна база от данни; реализация на релационната база от данни; видове
операции върху релационната база от данни; заявки към релационната база от данни.
Релационна алгебра: основни (обединение; разлика; декартово произведение; проекция;
селекция) и допълнителни (сечение; частно; съединение; естествено съединение)
операции.
Примерни задачи: Съставяне на SQL заявки, DDL и DML команди.

24. Бази от данни. Нормални форми.
Нормални форми. Проектиране схемите на релационните бази от данни. Аномалии,
ограничения, ключове. Функционални зависимости, аксиоми на Армстронг. Първа,
втора, трета нормална форма, нормална форма на Бойс-Код. Многозначни зависимости;
аксиоми на функционалните и многозначните зависимости; съединение без загуба;
четвърта нормална форма.
Примерни задачи: Привеждане на схема на базата от данни (при зададени функционални
зависимости) към зададена нормална форма.

25. Търсене в пространството от състояния. Генетични алгоритми.
Пространство на състоянията. Основни понятия. Формулировка на основните типове
задачи за търсене в пространството на състоянията: търсене на път до определена цел,
формиране на стратегия при игри за двама играчи, намиране на цел при спазване на
ограничителни условия. Методи за информирано (евристично) търсене на път до
определена цел: best-first search, beam search, hill climbing, A*. Генетични алгоритми –
основен алгоритъм, типове кръстосване и мутация.

26. Съвременни софтуерни технологии.
Софтуерен продукт и процес. Модел на софтуерен процес. Софтуерни технологии.
Управление на софтуерен проект и ресурсите. Участници в софтуерния процес.
Функционални и нефункционални изисквания. Анализ и проектиране на софтуерните
изсиквания. Проектиране на софтуера. Обектно-ориентиран дизайн. Езици за описание.
UML. Верификация и валидация на софтуера. Тестване на софтуера. Управление на
процеса на тестване. Управление на качеството на процеса на създаване на софтуер.
Съвременни софтуерни технологии. Гъвкави (agile) софтуерни технологии. Extreme
Programming (XP). Test Driven Development. Feature driven development. SCRUM.

27. Архитектури на софтуерни системи.
Софтуерни технологии центрирани около софтуерната архитектура. Качествени
атрибути – дизайн на архитектурата. Дизайн за постигане на ефективност, сложност,
скалируемост и хетерогенност, адаптируемост на архитектурата. Надеждност и
сигурност. Компоненти и конектори. Типове конектори и техните променливи
характеристики. Критерий за избор на подходящи конектори. Архитектурни стилове.
Разпределени, мрежови, децентрализирани архитектури. Архитектури, ориентирани
към услуги и уеб услуги. Клиент –сървър. Анализ и визуализация на софтуерна
архитектура.

28. Симетрични оператори в крайномерни евклидови пространства. Основни
свойства. Теорема за диагонализация.
Определение за симетричен оператор. Матрица на симетричен оператор спрямо
ортонормиран базис. Всички характеристични корени на симетричен оператор са
реални числа. Всеки два собствени вектора, съответстващи на различни собствени
стойности, са ортогонални помежду си. Съществува ортонормиран базис на
пространството, в който матрицата на симетричен оператор е диагонална.

29. Симетрична и алтернативна група. Теорема на Кейли. Теорема за
хомоморфизмите на групи.
Симетрична група Sn – представяне на елементите като произведение на независими
цикли. Спрягане на елементите на Sn. Транспозиции и представяне на елементите като
произведение на транспозиции. Алтернативна група. Теорема на Кейли – всяка крайна
група е изоморфна на подгрупа на симетричната група. Хомоморфизъм при групи, ядро
и образ. Теорема за хомоморфизмите при групи.

30. Теорема на Ферма. Теореми за средните стойности (Рол, Лагранж и Коши).
Формула на Тейлър.
Да се дефинира понятието локален екстремум на функция на една променлива. Да се
формулира и докаже необходимо условие за локален екстремум за диференцируеми
функции (теорема на Ферма).
Да се докажат следните теореми, формулирани общо за по-кратко.
Нека функцията е непрекъсната в затворения интервал и притежава производна
поне в отворения интервал . Да се докаже Рол. Да се докаже Лагранж. Да се докаже Коши.
По отношение на твърдението във в) да се докаже, че при направените в него
предположения имам g(a) =/= g(b).
Да се изведе формулата на Тейлър с остатъчен член във формата на Лагранж.

31. Определен интеграл. Дефиниция и свойства. Интегруемост на непрекъснатите
функции. Теорема на Нютон - Лайбниц.
Да се дефинират последователно: разбиване на интервал, големи и малки суми на
Дарбу. Да се установи, че при добавяне на нови точки в разбиването на интервала,
големите суми на Дарбу не нарастват, а малките не намаляват (желателно е да се
направи чертеж). Да се дефинира риманов интеграл чрез подхода на Дарбу.
Да се докаже, че дадена функция е интегруема по Риман тогава и само тогава, когато за
всяко съществуват голяма сума на Дарбу S и малка сума на Дарбу s такива, че
. Като се използва тази теорема и теоремата на Кантор (без доказателство),
според която всяка непрекъсната функция в краен и затворен интервал е равномерно
непрекъсната, да се докаже, че всяка непрекъсната функция в краен и затворен
интервал е интегруема по Риман.
Да се изброят (без доказателство) основните свойства на римановия интеграл.
За установяването на това твърдение да се приложат (без доказателство) свойството за
интегриране на неравенства и теоремата, че всяка непрекъсната функция в [a, b] приема
всички стойности между максимума и минимума си.
Да се докаже теоремата на Нютон-Лайбниц.
Да се покаже как теоремата се използва за изчисляване на определени интеграли.

32. Уравнения на права и равнина. Формули за разстояния.
Векторни и параметрични (скаларни) уравнения на права и равнина. Общо уравнение
на права в равнината. Декартово уравнение. Взаимно положение на две прави.
Нормално уравнение на права. Разстояние от точка до права. Общо уравнение на
равнина. Взаимно положение на две равнини. Нормално уравнение на равнина.
Разстояние от точка до равнина.

33. Итерационни методи за решаване на нелинейни уравнения.
Да се дефинира понятието неподвижна точка на изображението  и да се докаже, че
ако  е непрекъснато изображение на интервала [a,b] в себе си, то
 има поне една
неподвижна точка в [a,b]. Да се покаже, че решаването на уравнението f(x) = 0 може да
се сведе към намиране на неподвижна точка.
Да се дефинира понятието свиващо изображение и да се докаже, че ако  е
непрекъснато изображение на интервала [a, b] в себе си и е свиващо с константа на
Липшиц q<1, то: а) уравнението x = (x) има единствен корен  в [a,b]; б) редицата {xn}
от последователни приближения (при произволно x0[a,b] и x n+1 = (xn), n = 0,1,2,…,
клони към  при n → , като | xn – |  (b – a)qn, за всяко n. Да се получи като следствие,
че ако  е корен на уравнението x = (x) и  има непрекъсната производна в околностU
на , за която( )
1

 , то при достатъчно добро начално приближение x0
итерационният процес, породен от , е сходящ със скоростта на геометрична
прогресия. Да се дефинира понятието ред на сходимост.
Да се дадат геометрична илюстрация, формула за последователните приближения и ред
на сходимост при: метод на хордите, метод на секущите и метод на Нютон. Да се
докаже, че при метода на хордите сходимостта е със скоростта на геометричната
прогресия (при условие, че коренът е отделен в достатъчно малък интервал).

34. Дискретни разпределения. Равномерно, биномно, геометрично и Поасоново
разпределение. Задачи, в които възникват. Моменти –математическо очакване и
дисперсия.
На изпита комисията дава две разпределения, върху които се развива въпросът.
Дефиниция на дискретно вероятностно разпределение на случайна величина. Свойства
на вероятностите (неотрицателност и нормираност, монотонност и адитивност). За
всяко от дадените две разпределения да се посочи пример, при който то възниква. Да се
пресметне математическото очакване и дисперсията на всяко от тези разпределения.
При пресмятанията може да се използва пораждаща функция или пораждаща
моментите функция, но тя трябва да се дефинира и да се покажат основните й свойства
(без доказателство).